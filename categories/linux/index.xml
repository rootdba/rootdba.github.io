<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 牧人池塘</title>
    <link>/categories/linux/</link>
    <description>Recent content in Linux on 牧人池塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 03 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rocky9替换国内镜像源</title>
      <link>/notes/rocky9-china-mirrors/</link>
      <pubDate>Fri, 03 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/notes/rocky9-china-mirrors/</guid>
      <description>替换为腾讯云镜像: sed -e &amp;#39;s|^mirrorlist=|#mirrorlist=|g&amp;#39; \ -e &amp;#39;s|^#baseurl=http://dl.rockylinux.org/$contentdir|baseurl=https://mirrors.cloud.tencent.com/rocky|g&amp;#39; \ -i.bak \ /etc/yum.repos.d/rocky-extras.repo \ /etc/yum.repos.d/rocky.repo 替换后运行 dnf makecache 更新缓存 Rocky9国内镜像源地址： 阿里云AlmaLinux镜像：https://mirrors.aliyun.com/rockylinux/ 腾</description>
    </item>
    
    <item>
      <title>AlmaLinux9.1替换国内镜像源</title>
      <link>/notes/almalinux9_mirrors/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/notes/almalinux9_mirrors/</guid>
      <description>备份源地址： cp -r /etc/yum.repos.d/ /etc/yum.repos.d_bak 替换为阿里云镜像: sed -e &amp;#39;s|^mirrorlist=|#mirrorlist=|g&amp;#39; \ -e &amp;#39;s|^# baseurl=https://repo.almalinux.org|baseurl=https://mirrors.aliyun.com|g&amp;#39; \ -i.bak \ /etc/yum.repos.d/almalinux*.repo AlmaLinux9.1国内镜像源地址： 阿里云AlmaLinux镜像：https://mirrors.aliyun.com/almalinu</description>
    </item>
    
    <item>
      <title>Debian修改时区及定时同步时间</title>
      <link>/notes/debian-timezone-time-update/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/notes/debian-timezone-time-update/</guid>
      <description>先查看Debian的默认时区： root@devops:~# timedatectl Local time: Fri 2022-11-24 10:13:29 UTC Universal time: Fri 2022-11-24 10:13:29 UTC RTC time: Fri 2022-11-24 10:13:29 Time zone: UTC (UTC, +0000) System clock synchronized: no NTP service: inactive RTC in local TZ: no 现在当前是UTC，修改为Asia/Shanghai root@devops:~# timedatectl set-timezone Asia/Shanghai 查看修改情况： root@devops:~# timedatectl Local time: Fri 2022-11-24 10:15:51 CST Universal time: Fri 2022-11-24 10:15:51</description>
    </item>
    
    <item>
      <title>DNF包管理器</title>
      <link>/notes/dnf/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/notes/dnf/</guid>
      <description>dnf是一个软件包管理器，它在基于RPM的Linux发行版上可以安装、更新和删除包。它自动计算依赖并确定安装包所需的操作。 dnf还使维护机器组变得更容易，无需使用rpm手动更新每个机器组。自fedor</description>
    </item>
    
    <item>
      <title>Nginx禁止ip直接访问或任意域名访问</title>
      <link>/notes/nginx_default_site/</link>
      <pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/notes/nginx_default_site/</guid>
      <description>禁止未绑定的域名或任意域名直接访问： server { listen 80 default_server; server_name _; # 默认server return 500; } 对任意域名访问做301跳转： server { listen 80 default_server; server_name _; return 301 https://www.test.com$request_uri; } 以上设置后使用IP不能直接访问服务器，需要绑定域名后访问。</description>
    </item>
    
    <item>
      <title>在192 MB的VPS上安装ss服务</title>
      <link>/notes/ubuntu_insert_ss/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/notes/ubuntu_insert_ss/</guid>
      <description>在内存只有192MB小鸡vps上安装ss服务，基于ubuntu16.04精简版，安装脚本命令如下： apt-get update pip install -U pip pip3 install --upgrade pip pip3 install shadowsocks pip install --upgrade shadowsocks pip3 install --upgrade shadowsocks cat &amp;lt;&amp;lt;EOF&amp;gt;&amp;gt; /etc/shadowsocks.json { &amp;#34;server&amp;#34;:&amp;#34;vps ipadder&amp;#34;, &amp;#34;local_address&amp;#34;:&amp;#34;127.0.0.1&amp;#34;, &amp;#34;local_port&amp;#34;:8888, &amp;#34;port_password&amp;#34;:{ &amp;#34;9001&amp;#34;:&amp;#34;password&amp;#34;, &amp;#34;9002&amp;#34;:&amp;#34;password&amp;#34; }, &amp;#34;timeout&amp;#34;:600, &amp;#34;method&amp;#34;:&amp;#34;aes-256-cfb&amp;#34;, &amp;#34;fast_open&amp;#34;: false } EOF /usr/local/bin/ssserver -c /etc/shadowsocks.json &amp;gt;&amp;gt; /ss.log 2&amp;gt;&amp;amp;1 &amp;amp; 系统进程 C</description>
    </item>
    
    <item>
      <title>CentOS快速安装ss服务</title>
      <link>/notes/centos_insert_ss/</link>
      <pubDate>Wed, 07 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/notes/centos_insert_ss/</guid>
      <description>1、安装epel源： yum install epel-release -y 2、更新当前系统: yum update -y 3、安装升级pip yum install python-pip -y pip install -U pip 4、pip安装shadowsocks pip install shadowsocks 5、创建配置文件： cat &amp;lt;&amp;lt;EOF&amp;gt;&amp;gt; /etc/shadowsocks.json { &amp;#34;server&amp;#34;:&amp;#34;VPS IP&amp;#34;, &amp;#34;local_address&amp;#34;:&amp;#34;127.0.0.1&amp;#34;, &amp;#34;local_port&amp;#34;:8888, &amp;#34;port_password&amp;#34;:{ &amp;#34;9991&amp;#34;:&amp;#34;PASSWORD&amp;#34;, &amp;#34;9992&amp;#34;:&amp;#34;PASSWORD&amp;#34; }, &amp;#34;timeout&amp;#34;:600, &amp;#34;method&amp;#34;:&amp;#34;aes-256-cfb&amp;#34;, &amp;#34;fast_open&amp;#34;: false } EOF 参数说明： serv</description>
    </item>
    
    <item>
      <title>CentOS/RHEL7安装GnomeGUI</title>
      <link>/notes/gnomegui/</link>
      <pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/notes/gnomegui/</guid>
      <description>CentOS/RHEL 7: yum groupinstall &amp;#34;GNOME Desktop&amp;#34; &amp;#34;Graphical Administration Tools&amp;#34; &amp;#34;Server with GUI&amp;#34; -y 设置开机启动图形界面: ln -sf /lib/systemd/system/runlevel5.target /etc/systemd/system/default.target reboot 重启即可。</description>
    </item>
    
    <item>
      <title>CentOS/RHEL7下运行级别的切换</title>
      <link>/notes/runlevel/</link>
      <pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/notes/runlevel/</guid>
      <description>由命令行级别切换到窗口级别的命令未变：init 5或startx 由窗口级别切换到命令行级别的命令未变：init 3 新版本的运行级别都定义在 /lib/systemd/system下: [root@localhost ~]# ls -ltr /lib/systemd/system/runlevel*.target 1 root root 16 9月 10</description>
    </item>
    
    <item>
      <title>Linux下使用route查看修改路由信息</title>
      <link>/notes/route/</link>
      <pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/notes/route/</guid>
      <description>1．命令格式： route [-f] [-p] [Command [Destination] [mask Netmask] [Gateway] [metric Metric]] [if Interface]] 2．命令功能： Route命令是用于操作基于内核ip路由表，它的主要作用是创建一个静态路由让指定一个主机或者一个网络通过一个网络接口，如eth0。当使用&amp;quot;</description>
    </item>
    
    <item>
      <title>手动创建Swap交换分区及Swap说明</title>
      <link>/notes/swap/</link>
      <pubDate>Fri, 23 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/notes/swap/</guid>
      <description>Swap分区在系统的物理内存不够用的时候，把硬盘空间中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到 Swap 分区中，等到那</description>
    </item>
    
    <item>
      <title>CentOS/Redhat系列Linux安装EPEL软件库</title>
      <link>/notes/install-epel/</link>
      <pubDate>Thu, 22 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/notes/install-epel/</guid>
      <description>EPEL（Extra Packages for Enterprise Linux） 是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS等提供高质量软件包的项目。装上了 EPEL，就像在 Fedora 上一样，可以通过 yum install 软件包名，即可安装很多以前需要编译安装的软件、</description>
    </item>
    
    <item>
      <title>快速升级kernel内核到指定版本</title>
      <link>/notes/kernel-update/</link>
      <pubDate>Thu, 22 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/notes/kernel-update/</guid>
      <description>CentOS默认kernel内核版本是2.6.32-642.11.1.el6一些新工具不支持，可以用yum快速升级下内核，使用uname -r查看当前系统Linux内核版本，升级内核步骤如下： 导入 Public Key rpm</description>
    </item>
    
    <item>
      <title>curl来测试网站-dns解析时间,响应时间,传输时间</title>
      <link>/notes/curl/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/notes/curl/</guid>
      <description>curl -o /dev/null -s -w %{time_connect}:%{time_starttransfer}:%{time_total} https://iops.top 0.044:0.412:0.446 给出对站点执行 curl 命令的情况.输出通常是 HTML 代码,通过 -o 参数发送到 /dev/null.-s 参数去掉所有状态信息.-w 参数让 curl 写出计时器的状态信息： 参数说明： time_connect 建立到服务器的 TCP 连接所用的时间 time_starttransfer 在发出请求之后,We</description>
    </item>
    
    <item>
      <title>ubuntu15.10下远程连接windows服务器桌面</title>
      <link>/notes/vinagre_rdesktop/</link>
      <pubDate>Fri, 11 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/notes/vinagre_rdesktop/</guid>
      <description>ubuntu下要连接windows服务器远程桌面，有两个方法需要安装下工具，rdesktop和vinagre，安装方法如下： sudo apt-get install rdesktop sudo apt-get install vinagre 如果是redhat/centos系列直接yum安装即可； 安装</description>
    </item>
    
    <item>
      <title>Linux系统dig和nslookup及iftop的安装</title>
      <link>/notes/installation-dig-nslookup-and-iftop-in-linux-system/</link>
      <pubDate>Fri, 04 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/notes/installation-dig-nslookup-and-iftop-in-linux-system/</guid>
      <description>nslookup是常用来查询本机域名解析情况的命令，但是一些linux系统下默认无此命令。我们可以通过安装一个包来使该命令生效，这个包中也包括dig命令，安装方法如下： Debian / Ubuntu: sudo apt-get install dnsutils Fedora / Centos / RedHat: yum install bind-utils iftop</description>
    </item>
    
    <item>
      <title>Typecho在Windows iis6环境下设置伪静态</title>
      <link>/notes/typecho_iis6_rewrite/</link>
      <pubDate>Fri, 27 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>/notes/typecho_iis6_rewrite/</guid>
      <description>之前一直是lnmp环境，直接给nginx设置下typecho的伪静态就好了，刚才在2003+iis6上面设置测试typecho的伪静态记录如下： 1、下载Rewrite.dll文件，放到非系统盘，我是放</description>
    </item>
    
  </channel>
</rss>
